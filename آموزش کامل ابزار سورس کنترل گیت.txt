
مقدمه
هرچقدر بیشتر وارد دنیای برنامه نویسی و توسعه نرم افزار می شوید، متوجه خواهید شد بیشتر کار ها بصورت تیمی انجام می شود و در تیم ها، سیستم کنترل ورژن که وظیفه مدیریت تغییر کد ها را دارد نیازی حیاتی محسوب می شود.
ابزار گیت (Git) توسط توسعه دهنده اصلی سیستم عامل متن باز لینوکس، لینس تُروالدز، ساخته شده شده است و در واقع ابزاری بود که برای ورژن کنترلِ کد های لینوکس نوشته شد و بعدا توسط عده زیادی از توسعه دهندگان تا به امروز استفاده می شود.
گیتهاب (Github) وب سایتی است که رابطِ کاربریِ گرافیکیِ تحتِ وبی را برای همه توسعه دهندگان فراهم کرده است که بوسیله آن می توان به صورت ریموت با گیت کار کرد.
برای توسعه دهندگان تازه کار گیت موضوعی سخت بنظر می رسد، اما با کار کردن با آن و با گذشت زمان کافی، این ابزار بخشی از جریان کاری شما خواهد بود و هر روز از آن استفاده خواهید کرد.
در این مقاله قصد داریم کامند های مهم زیر که باید برای استفاده از گیت بلد باشید را به شما اموزش دهیم.
git clone
git add / commit
git push
git pull
git checkout
git stash / merge
گیت کلون
گیت کلون اولین کامندی است که باید یاد بگیرید. استفاده آن زمانی است که شما میخواهید کپیِ یک ریپو (مخفف کلمه repository، به معنای پوشه ای است که همه کد های یک پروژه در آن وجود دارد) را در سیستم خود کلون (کپی) کنید.

ریپازیتوری نود جی اس
به دو طریق می توان یک ریپازیتوری را کلون کرد:
استفاده از HTTP
استفاده از SSH
در این مقاله ما از روش HTTPS استفاده می کنیم. به صفحه ریپازیتوری مورد نظر رفته و بر روی دکمه دانلود کد کلیک کنید. لینک HTTPS را کپی کنید و برای کلون کردن ریپازیتوری نود جی اس در سیستم خود URL را بعد از کامند گیت کلون استفاده کنید:
git clone https://github.com/nodejs/node.git
بعد از اتمام دانلود همه فایل هایی که داخل این ریپو وجود داشته در سیستم شما قابل مشاهده و استفاده خواهد بود.
ریپو ها شاخه های مختلفی دارند. فکر کنید شما صاحب ریپازیتوری ابزاری هستید که هزاران نفر از آن در کد های خود استفاده می کنند. اگر بخواهید تغییرات و امکانات جدیدی به شاخه master ابزار خود اضافه کنید همه کسانی که شاخه master شما را کلون کرده بودند تحت تاثیر قرار خواهند گرفت. حال فرض کنید کد شما باگ داشته باشد پس کد همه این افراد پر از باگ خواهد بود. برای حل این مشکل بحث شاخه های گیت (branches) مطرح شد. اگر بخواهید امکان جدیدی را به کد خود اضافه کنید یا ایده ای را امتحان کنید باید یک شاخه جدید از master خود ایجاد کنید و در آن فضای امن کار کنید. اگر با نتیجه کار خود در آن شاخه راضی بودید کی توانید آن شاخه را به شاخه master خود اضافه کنید.

طرح دیداری از برنچینگ در گیت

گیت اَدد و گیت کامیت
دو دستور گیت ادد و گیت کامیت تقریبا همیشه در کنار هم استفاده می شوند. گیت ادد فایلی که مشخص می کنید را از فضای کاری شما به ایندکس گیت شما اضافه می کند. گیت کامیت فایلهایی که به ایندکس اضافه کردید را به ریپو محلی شما اضافه می کند که فقط روی سیستم شماست.
git add FILENAME
git commit -m "COMMIT MESSAGE"
تصور کنید یک صفحه وب ساده در یک فایل HTML به نام webpage ساختیم و می خواهیم آنرا به ریپو گیت اضافه کنیم. در دستور کامیت توضیحاتی درباره آن می دهیم که به آن commit message گفته می شود.
git add webpage.html
git commit -m "added webpage.html with some beautiful styles!"
گیت پوش
برای ذخیره کردن کامیت های خود در ریپو ریموت (مثل گیتهاب) از کامند:
git push -u origin branch-name
استفاده میکنیم. در این صورت دیگران به کد ها و کامیت های ما دسترسی خواهد داشت.
گیت پول
تصور کنید دوست شما تغییراتی در یک ریپو بوجود آورده است.









